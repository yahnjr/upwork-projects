import pandas as pd
import os as os
import json

#Convert coordinates to JSON format
body_data = {
    "Left Eye": [[369.5905456542969, 154.8946075439453], [361.9791259765625, 158.7003173828125], [380.2465515136719, 180.01231384277344], [317.0716857910156, 156.41688537597656], [117.6523208618164, 126.73233032226562], [237.91285705566406, 208.93572998046875], [231.0625762939453, 236.3368682861328], [215.07858276367188, 266.7825927734375], [294.2374267578125, 207.4134521484375], [301.08770751953125, 243.94830322265625], [319.3551330566406, 271.34942626953125], [139.7254638671875, 190.66831970214844], [116.89117431640625, 227.9643096923828], [123.74146270751953, 267.5437316894531], [140.48660278320312, 188.3848876953125], [109.27974700927734, 226.4420166015625], [116.13003540039062, 271.34942626953125]],
    "Right Eye": [[369.9541015625, 156.5676727294922], [362.4297790527344, 161.08226013183594], [380.4881286621094, 181.3978729248047], [321.0461120605469, 153.55795288085938], [116.3850326538086, 127.22288513183594], [239.78363037109375, 208.48538208007812], [236.02146911621094, 237.83016967773438], [214.20098876953125, 262.6603698730469], [290.19647216796875, 207.73294067382812], [294.7110595703125, 242.34474182128906], [312.7693786621094, 270.1846618652344], [148.7395477294922, 194.18919372558594], [125.41419982910156, 225.03884887695312], [149.49197387695312, 256.64093017578125], [142.72010803222656, 189.67462158203125], [104.34614562988281, 222.78155517578125], [108.86073303222656, 269.4322509765625]],
    "Nose": [[373.8155822753906, 157.22998046875], [361.9992980957031, 163.13812255859375], [383.41632080078125, 180.86257934570312], [316.94964599609375, 155.75294494628906], [117.54962921142578, 124.73516082763672], [245.31333923339844, 208.18775939941406], [245.31333923339844, 241.4210968017578], [218.72666931152344, 263.57666015625], [283.71630859375, 208.92628479003906], [291.10150146484375, 244.37518310546875], [309.564453125, 270.96185302734375], [151.521484375, 194.89442443847656], [144.13629150390625, 227.38925170898438], [166.29185485839844, 259.1455383300781], [142.6592559814453, 186.77072143554688], [102.04074096679688, 222.9581298828125], [104.25629425048828, 269.48480224609375]],
    "Neck": [[371.7117614746094, 157.0782928466797], [362.802001953125, 162.27565002441406], [380.6214904785156, 181.58010864257812], [317.5107727050781, 155.5933380126953], [117.0413818359375, 123.6667251586914], [248.460205078125, 206.08192443847656], [250.68763732910156, 236.52357482910156], [232.1256561279297, 262.5103454589844], [281.1292724609375, 204.59695434570312], [285.58416748046875, 240.9784393310547], [304.88861083984375, 269.93511962890625], [157.13525390625, 193.45977783203125], [153.42286682128906, 229.09877014160156], [174.9547576904297, 259.5404357910156], [145.99807739257812, 189.00489807128906], [97.73692321777344, 222.4164581298828], [99.22188568115234, 268.4501647949219]],
    "Root of Tail": [[372.39251708984375, 160.03842163085938], [364.1737365722656, 164.52137756347656], [380.61126708984375, 181.7060546875], [317.1026611328125, 154.8083038330078], [116.86380004882812, 127.16338348388672], [253.5940704345703, 207.85665893554688], [258.8241882324219, 236.2487335205078], [259.57135009765625, 264.64080810546875], [278.99749755859375, 206.36233520507812], [281.2389831542969, 242.22601318359375], [299.17083740234375, 270.61810302734375], [163.18771362304688, 192.16629028320312], [154.2218017578125, 225.7884979248047], [178.13092041015625, 258.6635437011719], [158.7047576904297, 189.1776580810547], [97.4376449584961, 220.55838012695312], [95.1961669921875, 266.8822937011719]],
    "Left Shoulder": [[372.67987060546875, 159.0173797607422], [362.9151611328125, 164.27529907226562], [380.1911926269531, 182.30245971679688], [316.34503173828125, 153.00833129882812], [118.04637145996094, 123.7142105102539], [259.2590637207031, 207.84091186523438], [266.01922607421875, 238.63729858398438], [266.7703552246094, 265.67803955078125], [276.5350646972656, 207.08978271484375], [278.037353515625, 242.39295959472656], [293.81109619140625, 270.9359436035156], [173.6300811767578, 192.81829833984375], [161.6119842529297, 230.37486267089844], [190.90611267089844, 258.1667175292969], [142.08258056640625, 187.5603790283203], [91.00564575195312, 221.3612823486328], [90.2545166015625, 267.1802978515625]],
    "Left Elbow": [[376.1500549316406, 159.93203735351562], [363.9841003417969, 167.5357666015625], [382.2330322265625, 184.26394653320312], [314.5599365234375, 151.5679473876953], [121.42542266845703, 121.91343688964844], [271.2187194824219, 204.0336151123047], [275.02056884765625, 233.68812561035156], [279.5827941894531, 257.2596740722656], [274.26019287109375, 204.0336151123047], [275.02056884765625, 242.81259155273438], [287.9468994140625, 270.94635009765625], [175.41183471679688, 190.346923828125], [164.00625610351562, 230.64663696289062], [192.900390625, 258.7803955078125], [138.1536102294922, 185.78468322753906], [84.92756652832031, 220.00143432617188], [85.68793487548828, 268.6652526855469]],
    "Left Front of Paw": [[372.9755859375, 161.72283935546875], [366.00872802734375, 167.1415252685547], [382.2647705078125, 183.3975830078125], [318.78875732421875, 158.62644958496094], [122.94197082519531, 119.92155456542969], [276.9874572753906, 209.71690368652344], [283.954345703125, 236.81033325195312], [285.5025329589844, 257.7109680175781], [270.02056884765625, 207.39462280273438], [273.1169738769531, 242.22901916503906], [279.30975341796875, 273.19293212890625], [177.1288299560547, 192.68675231933594], [166.2914581298828, 232.16575622558594], [195.70716857910156, 261.58148193359375], [123.716064453125, 189.59036254882812], [81.14067840576172, 220.5542755126953], [78.81838989257812, 268.54833984375]],
    "Right Shoulder": [[372.71307373046875, 162.55410766601562], [365.65679931640625, 167.25828552246094], [381.33740234375, 183.722900390625], [319.3990478515625, 160.98605346679688], [121.03960418701172, 121.00054931640625], [280.1976013183594, 208.02781677246094], [290.3899841308594, 233.90078735351562], [291.17401123046875, 257.4216613769531], [265.301025390625, 208.02781677246094], [262.9489440917969, 245.66123962402344], [268.4371337890625, 273.88629150390625], [174.35360717773438, 197.05140686035156], [166.5133056640625, 237.82093811035156], [197.09046936035156, 264.4779357910156], [117.11945343017578, 187.64305114746094], [77.91798400878906, 219.0042266845703], [73.99783325195312, 267.61407470703125]],
    "Right Elbow": [[373.5946350097656, 163.51187133789062], [368.0271911621094, 167.48861694335938], [380.7527770996094, 183.39559936523438], [321.10162353515625, 158.73977661132812], [123.05976867675781, 121.35839080810547], [279.74346923828125, 208.8467559814453], [303.60394287109375, 237.47930908203125], [307.5806884765625, 260.54443359375], [265.42718505859375, 208.05140686035156], [257.47369384765625, 246.2281494140625], [266.2225341796875, 274.0653381347656], [173.16673278808594, 196.1211700439453], [167.59930419921875, 240.66070556640625], [197.02720642089844, 268.4979248046875], [116.69697570800781, 188.1676788330078], [74.54349517822266, 216.8002471923828], [68.9760513305664, 268.4979248046875]]
}


def transform_coordinates(animation_name, body_part_coordinates):
    animation_data = {
        animation_name: {
            "bones": {}
        }
    }

    for body_part, coordinates in body_part_coordinates.items():
        translate_frames = []
        current_time = 0.0
        for coord in coordinates:
            frame = {
                "time": round(current_time, 4),
                "x": coord[0],
                "y": coord[1]
            }
            translate_frames.append(frame)
            current_time += 0.0333

        animation_data[animation_name]["bones"][body_part] = {
            "translate": translate_frames
        }

    return json.dumps(animation_data, indent=4)
    
animation_json = transform_coordinates("new_animation", body_data)

with open(r"C:\python\scripts\upwork\catanimation\cat_animation.json", "w") as json_file:
    json_file.write(animation_json)

#Explore data structure
with open('cat_copy.json', 'r') as file:
    animation_data = json.load(file)

def explore_json_structure(data, prefix=''):
    if isinstance(data, dict):
        print(f"{prefix}Dictionary with {len(data)} keys: {', '.join(data.keys())}")
        for key, value in data.items():
            print(f"{prefix}Exploring key: '{key}'")
            explore_json_structure(value, prefix + '  ')
    elif isinstance(data, list):
        print(f"{prefix}List with {len(data)} items")
        if data and len(data) > 0:
            print(f"{prefix}Sample first item:")
            explore_json_structure(data[0], prefix + '  ')
    else:
        print(f"{prefix}Value: {type(data).__name__} = {data}")

explore_json_structure(animation_data)

# Insert necessary bones for animation
with open(r"C:\python\scripts\upwork\catanimation\animation-testing\assets\cat.json", 'r') as file:
    spine_data = json.load(file)

new_bones = [
    {
        "name": "Left Eye",
        "parent": "root", 
        "x": 369.5,
        "y": 154.9,
        "color": "ff00ffff"
    },
    {
        "name": "Right Eye",
        "parent": "root",
        "x": 369.9,
        "y": 156.6,
        "color": "ff00ffff"
    },    
    {
        "name": "Nose",
        "parent": "root",
        "x": 373.8,
        "y": 157.2,
        "color": "ff00ffff"
    },    
    {
        "name": "Neck",
        "parent": "root",
        "x": 371.7,
        "y": 157.1,
        "color": "ff00ffff"
    },    
    {
        "name": "Root of Tail",
        "parent": "root",
        "x": 372.4,
        "y": 160.0,
        "color": "ff00ffff"
    },    
    {
        "name": "Left Shoulder",
        "parent": "root",
        "x": 372.7,
        "y": 159.0,
        "color": "ff00ffff"
    },    
    {
        "name": "Left Elbow",
        "parent": "root",
        "x": 376.2,
        "y": 159.9,
        "color": "ff00ffff"
    },    
    {
        "name": "Left Front of Paw",
        "parent": "root",
        "x": 372.9,
        "y": 161.7,
        "color": "ff00ffff"
    },    
    {
        "name": "Right Shoulder",
        "parent": "root",
        "x": 372.7,
        "y": 162.6,
        "color": "ff00ffff"
    },    
    {
        "name": "Right Elbow",
        "parent": "root",
        "x": 373.6,
        "y": 163.5,
        "color": "ff00ffff"
    },  
]

for new_bone in new_bones:
    if not any(bone["name"] == new_bone["name"] for bone in spine_data["bones"]):
        spine_data["bones"].append(new_bone)

if "new_animation" not in spine_data["animations"]:
    spine_data["animations"]["new_animation"] = {"bones": {}}

animation_data = json.load(open(r"C:\python\scripts\upwork\catanimation\cat_animation.json", 'r'))
for bone_name, bone_data in animation_data["new_animation"]["bones"].items():
    spine_data["animations"]["new_animation"]["bones"][bone_name] = bone_data

# Save the updated file
with open(r"C:\python\scripts\upwork\catanimation\updated_cat.json", 'w') as file:
    json.dump(spine_data, file, indent=4)